{
  "name": "XorBreak",
  "time": 1488,
  "status": "OK",
  "tests": [
    {
      "name": "singleCharacterXorScores",
      "time": 1350,
      "status": "OK",
      "tests": [
        {
          "name": "It should score A to be highest when hello world is encoded with that hex character",
          "time": 723,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 470,
              "line": 14,
              "column": 9
            },
            "end": {
              "index": 555,
              "line": 14,
              "column": 94
            },
            "locationString": "\n14|         \"It should score A to be highest when hello world is encoded with that hex character\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It should score A to be highest when hello world is encoded with that hex character\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        },
        {
          "name": "It should score 1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736",
          "time": 583,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 1061,
              "line": 25,
              "column": 9
            },
            "end": {
              "index": 1147,
              "line": 25,
              "column": 95
            },
            "locationString": "\n25|         \"It should score 1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It should score 1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        }
      ],
      "location": {
        "start": {
          "index": 421,
          "line": 13,
          "column": 5
        },
        "end": {
          "index": 447,
          "line": 13,
          "column": 31
        },
        "locationString": "\n13|     \"singleCharacterXorScores\" describedBy [\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "text": "\"singleCharacterXorScores\" describedBy [",
        "sourceIdentifier": "cypherBreaks::XorBreakTest"
      }
    },
    {
      "name": "xorDecryptString",
      "time": 52,
      "status": "OK",
      "tests": [
        {
          "name": "It should decrypt a hex string when given a single character hex secret",
          "time": 6,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 1648,
              "line": 37,
              "column": 9
            },
            "end": {
              "index": 1721,
              "line": 37,
              "column": 82
            },
            "locationString": "\n37|         \"It should decrypt a hex string when given a single character hex secret\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It should decrypt a hex string when given a single character hex secret\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        },
        {
          "name": "It should convert hello as Hex string when given a single character hex secret",
          "time": 21,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 1815,
              "line": 40,
              "column": 9
            },
            "end": {
              "index": 1895,
              "line": 40,
              "column": 89
            },
            "locationString": "\n40|         \"It should convert hello as Hex string when given a single character hex secret\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It should convert hello as Hex string when given a single character hex secret\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        },
        {
          "name": "It gives us back hello when we fromHexToString the xorDecrypted String",
          "time": 4,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 2170,
              "line": 47,
              "column": 9
            },
            "end": {
              "index": 2242,
              "line": 47,
              "column": 81
            },
            "locationString": "\n47|         \"It gives us back hello when we fromHexToString the xorDecrypted String\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It gives us back hello when we fromHexToString the xorDecrypted String\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        }
      ],
      "location": {
        "start": {
          "index": 1606,
          "line": 36,
          "column": 5
        },
        "end": {
          "index": 1624,
          "line": 36,
          "column": 23
        },
        "locationString": "\n36|     \"xorDecryptString\" describedBy  [\n        ^^^^^^^^^^^^^^^^^^",
        "text": "\"xorDecryptString\" describedBy  [",
        "sourceIdentifier": "cypherBreaks::XorBreakTest"
      }
    },
    {
      "name": "scoreString",
      "time": 16,
      "status": "OK",
      "tests": [
        {
          "name": "It should score a string with two 'e's as 4",
          "time": 1,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 2603,
              "line": 57,
              "column": 9
            },
            "end": {
              "index": 2648,
              "line": 57,
              "column": 54
            },
            "locationString": "\n57|         \"It should score a string with two 'e's as 4\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It should score a string with two 'e's as 4\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        },
        {
          "name": "It should score a string of hello as 7",
          "time": 1,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 2722,
              "line": 60,
              "column": 9
            },
            "end": {
              "index": 2762,
              "line": 60,
              "column": 49
            },
            "locationString": "\n60|         \"It should score a string of hello as 7\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It should score a string of hello as 7\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        },
        {
          "name": "It should score a string of xyz as 0",
          "time": 1,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 2839,
              "line": 63,
              "column": 9
            },
            "end": {
              "index": 2877,
              "line": 63,
              "column": 47
            },
            "locationString": "\n63|         \"It should score a string of xyz as 0\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It should score a string of xyz as 0\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        }
      ],
      "location": {
        "start": {
          "index": 2567,
          "line": 56,
          "column": 5
        },
        "end": {
          "index": 2580,
          "line": 56,
          "column": 18
        },
        "locationString": "\n56|     \"scoreString\" describedBy [\n        ^^^^^^^^^^^^^",
        "text": "\"scoreString\" describedBy [",
        "sourceIdentifier": "cypherBreaks::XorBreakTest"
      }
    },
    {
      "name": "scoreHexString",
      "time": 24,
      "status": "OK",
      "tests": [
        {
          "name": "It should score a hexString built from hello as 5",
          "time": 15,
          "status": "OK",
          "errorMessage": "",
          "location": {
            "start": {
              "index": 2994,
              "line": 68,
              "column": 9
            },
            "end": {
              "index": 3045,
              "line": 68,
              "column": 60
            },
            "locationString": "\n68|         \"It should score a hexString built from hello as 5\" in do {\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "text": "\"It should score a hexString built from hello as 5\" in do {",
            "sourceIdentifier": "cypherBreaks::XorBreakTest"
          }
        }
      ],
      "location": {
        "start": {
          "index": 2954,
          "line": 67,
          "column": 5
        },
        "end": {
          "index": 2970,
          "line": 67,
          "column": 21
        },
        "locationString": "\n67|     \"scoreHexString\" describedBy  [\n        ^^^^^^^^^^^^^^^^",
        "text": "\"scoreHexString\" describedBy  [",
        "sourceIdentifier": "cypherBreaks::XorBreakTest"
      }
    }
  ],
  "location": {
    "start": {
      "index": 392,
      "line": 12,
      "column": 1
    },
    "end": {
      "index": 402,
      "line": 12,
      "column": 11
    },
    "locationString": "\n12| \"XorBreak\" describedBy [\n    ^^^^^^^^^^",
    "text": "\"XorBreak\" describedBy [",
    "sourceIdentifier": "cypherBreaks::XorBreakTest"
  }
}